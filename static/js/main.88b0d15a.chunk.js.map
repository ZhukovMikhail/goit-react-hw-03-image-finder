{"version":3,"sources":["Components/Searchbar/SearchBar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Modal/Modal.jsx","Components/Button/Button.jsx","App.js","index.js"],"names":["SearchBar","state","searchQuerry","onSearchFormChange","e","setState","currentTarget","value","onSubmitForm","preventDefault","trim","props","onSubmit","toast","warn","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","querry","perPage","pageNumber","totalHits","loading","error","prevProps","prevState","page","prev","console","log","fetch","then","r","json","hits","catch","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","map","q","onClick","src","webformatURL","largeImageURL","alt","tags","id","ImageGallery","modalRoot","querySelector","Modal","idEscapeEvent","code","onToggleModal","onBackdropClick","target","addEventListener","removeEventListener","createPortal","children","Button","onLoadMore","App","showModal","largeImg","toggleModal","onImageClick","dir","dataset","onSearchSubmit","onLoading","color","height","width","position","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88b0d15a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchQuerry: '',\r\n  };\r\n  onSearchFormChange = e => {\r\n    this.setState({ searchQuerry: e.currentTarget.value });\r\n  };\r\n  onSubmitForm = e => {\r\n    e.preventDefault();\r\n    if (this.state.searchQuerry.trim() === '') {\r\n      toast.warn('No data entered');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.searchQuerry);\r\n    this.setState({ searchQuerry: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.onSubmitForm}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.onSearchFormChange}\r\n            value={this.state.searchQuerry}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  state = {\r\n    querry: [],\r\n    perPage: 12,\r\n    pageNumber: 1,\r\n    totalHits: null,\r\n    loading: false,\r\n    error: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.page !== this.state.pageNumber) {\r\n      if (this.props.page === 1) {\r\n        this.setState({\r\n          perPage: 12,\r\n          pageNumber: 1,\r\n        });\r\n        return;\r\n      }\r\n      this.setState(prev => ({\r\n        perPage: prev.perPage + 12,\r\n        pageNumber: prev.pageNumber + 1,\r\n      }));\r\n    }\r\n    if (\r\n      prevProps.querry !== this.props.querry ||\r\n      prevState.pageNumber !== this.props.page\r\n    ) {\r\n      this.setState({ loading: true });\r\n      this.props.loading(this.state.loading);\r\n\r\n      console.log('change querry');\r\n      console.log('Prev querry', prevProps.querry);\r\n      console.log('text of querry', this.props.querry);\r\n      const USER_KEY = '22985243-b477986a48324befacd1d8a65';\r\n      fetch(\r\n        `https://pixabay.com/api/?q=${this.props.querry}&page=${this.state.pageNumber}&key=${USER_KEY}&image_type=photo&orientation=horizontal&per_page=${this.state.perPage}`,\r\n      )\r\n        .then(r => r.json())\r\n        .then(r => {\r\n          this.setState({\r\n            querry: r.hits,\r\n            totalHits: r.totalHits,\r\n          });\r\n          console.log(r);\r\n          console.log(this.state.totalHits);\r\n          this.props.totalHits(this.state.totalHits);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.setState({\r\n            querry: [],\r\n            totalHits: null,\r\n            error: true,\r\n          });\r\n        })\r\n        .finally(() => {\r\n          this.setState({ loading: false });\r\n          this.props.loading(this.state.loading);\r\n        });\r\n    }\r\n\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return this.state.totalHits !== 0 ? (\r\n      this.state.querry.map(q => (\r\n        <li className=\"ImageGalleryItem\" key={q.id}>\r\n          <img\r\n            onClick={this.props.onClick}\r\n            src={q.webformatURL}\r\n            data-src={q.largeImageURL}\r\n            alt={q.tags}\r\n            className=\"ImageGalleryItem-image\"\r\n          />\r\n        </li>\r\n      ))\r\n    ) : (\r\n      <h2 className=\"title\"> No match found</h2>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nexport default class ImageGallery extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        <ImageGalleryItem\r\n          querry={this.props.querry}\r\n          page={this.props.page}\r\n          totalHits={this.props.totalHits}\r\n          onClick={this.props.onClick}\r\n          loading={this.props.loading}\r\n        />\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n// import styles from './Modal.module.css';\r\n// import ContactForm from '../ContactForm/ContactForm.jsx';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.idEscapeEvent);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.idEscapeEvent);\r\n  }\r\n\r\n  idEscapeEvent = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onToggleModal();\r\n    }\r\n  };\r\n\r\n  onBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onToggleModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.onBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nexport default class Button extends Component {\r\n  render() {\r\n    return (\r\n      <button className=\"Button\" onClick={this.props.onLoadMore}>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SearchBar from './Components/Searchbar/SearchBar.jsx';\nimport ImageGallery from './Components/ImageGallery/ImageGallery.jsx';\nimport Modal from './Components/Modal/Modal';\nimport Button from './Components/Button/Button.jsx';\nimport Loader from 'react-loader-spinner';\n\nclass App extends Component {\n  state = {\n    querry: '',\n    showModal: false,\n    largeImg: null,\n    totalHits: null,\n    page: 1,\n    loading: false,\n  };\n\n  toggleModal = () => {\n    this.setState(state => ({\n      showModal: !state.showModal,\n    }));\n  };\n  onImageClick = e => {\n    if ((e.target = 'IMG')) {\n      this.toggleModal();\n    }\n    console.dir(e.currentTarget.dataset.src);\n    this.setState({ largeImg: e.currentTarget.dataset.src });\n  };\n\n  onSearchSubmit = querry => {\n    console.log(querry);\n    this.setState({\n      querry: querry,\n      page: 1,\n    });\n  };\n  totalHits = totalHits => {\n    totalHits === 0\n      ? this.setState({\n          totalHits: null,\n        })\n      : this.setState({\n          totalHits: totalHits,\n        });\n  };\n\n  onLoadMore = () => {\n    console.log('кликнули на onLoadMore');\n    this.setState(prev => ({\n      page: prev.page + 1,\n    }));\n  };\n  onLoading = () => {\n    this.setState({ loading: !this.state.loading });\n  };\n\n  render() {\n    return (\n      <div className=\"section\">\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        {this.state.loading && (\n          <Loader\n            type=\"Bars\"\n            className=\"spinner\"\n            color=\"#00BFFF\"\n            height={50}\n            width={50}\n          />\n        )}\n        <ImageGallery\n          querry={this.state.querry}\n          page={this.state.page}\n          totalHits={this.totalHits}\n          onClick={this.onImageClick}\n          loading={this.onLoading}\n        />\n\n        {this.state.totalHits && <Button onLoadMore={this.onLoadMore} />}\n        {this.state.showModal && (\n          <Modal onToggleModal={this.toggleModal}>\n            <img src={this.state.largeImg} alt={this.state.querry} />\n            <button\n              className=\"closeBtn\"\n              type=\"button\"\n              onClick={this.toggleModal}\n            >\n              X\n            </button>\n          </Modal>\n        )}\n        <ToastContainer position=\"top-center\" autoClose={1000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}